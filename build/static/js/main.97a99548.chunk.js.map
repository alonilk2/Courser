{"version":3,"sources":["images/logo.png","history.js","images/avatar.png","Constants/userConst.js","Actions/authActions.js","Components/ProfileNavComp.js","Components/Navbar.js","Components/Category.js","Components/HomePageComponent.js","Views/HomePageView.js","App.js","serviceWorker.js","userConst.js","store.js","Reducers/authReducer.js","Components/SignInComponent.js","Views/SignInView.js","Components/SignupComponent.js","Views/SignUpView.js","Components/updatePssworscomponent.js","Views/UpdatePassView.js","Components/ForgotPasswordComponent.js","Views/ForgotPasswordView.js","images/FinalTask.pdf","Components/AboutComponent.js","Views/AboutView.js","Components/ConstractionComponent.js","Views/ConstractionView.js","index.js"],"names":["history","createBrowserHistory","USER_SIGNIN_FAILED","USER_SIGNUP_FAILED","ProfileNavComp","props","userInstance","cookie","get","dispatch","useDispatch","user","JSON","parse","console","log","Dropdown","className","src","avatar","alt","Toggle","id","data","first_name","Menu","Item","href","onClick","Cookie","remove","type","role","aria-pressed","NavBar","Navbar","expand","Brand","logo","height","aria-controls","Collapse","Nav","Component","Category","Card","style","width","Img","variant","imagePath","Body","Title","title","Text","Button","HomePageComponent","categoryList","state","categories","map","category","Name","this","bind","Axios","post","catsToList","success","setState","result","HomePageView","App","Boolean","window","location","hostname","match","USER_SIGNIN_ATTEMPT","USER_SIGNIN_SUCCESS","USER_SIGNUP_ATTEMPT","USER_SIGNUP_SUCCESS","USER_SIGNOUT_SUCCESS","getJSON","initialState","loggedin","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","logging","payload","error","registering","applyMiddleware","thunk","SignInComponent","useState","Email","setEmail","password","setPassword","errorFromServer","useSelector","recaptchaRef","React","createRef","useHistory","onSubmit","event","preventDefault","email","then","response","set","stringify","push","catch","signin","Alert","required","onChange","e","target","value","placeholder","aria-label","aria-describedby","ref","sitekey","SignInView","SignUpComponent","password1","setPassword1","Firstname","setFirstName","Lastname","setLastName","checkNames","str","length","alert","search","test","checkPwd","firstname","lastname","a","signup","SignUpView","UpdatePasswordComponent","method","autocomplete","pass","document","getElementById","conf","UpdatePassView","ForgotPasswordComponent","ForgotPasswordView","AboutComponent","Pdf","AboutView","ConstractionComponent","ConstractionView","ReactDOM","render","StrictMode","exact","path","component","SignIn","SignUp","from","to","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8UAAe,G,MAAA,IAA0B,kC,QCG5BA,EAAUC,c,QCHR,G,MAAA,IAA0B,oC,2DCE5BC,EAAqB,qBAIrBC,EAAqB,qBC6BlC,I,QCGeC,MA9Bf,SAAwBC,GAEpB,IAAMC,EAAeC,IAAOC,IAAI,gBAC1BC,EAAWC,cACjB,GAAGJ,EAAc,CACb,IAAMK,EAAOC,KAAKC,MAAMP,GAExB,OADAQ,QAAQC,IAAIJ,GAER,eAACK,EAAA,EAAD,CAAUC,UAAU,gBAApB,UACI,qBAAKA,UAAU,SAASC,IAAKC,EAAQC,IAAI,oBACzC,eAACJ,EAAA,EAASK,OAAV,CAAiBC,GAAG,iBAApB,mBACWX,EAAKY,KAAKZ,KAAKa,cAG1B,eAACR,EAAA,EAASS,KAAV,WACI,cAACT,EAAA,EAASU,KAAV,CAAeC,KAAK,aAApB,wBACA,cAACX,EAAA,EAASU,KAAV,CAAeC,KAAK,IAAIC,QAAS,WAAKnB,GD8CpC,SAACA,GACnBoB,IAAOC,OAAO,gBACdrB,EAAS,CAACsB,KD/DsB,6BEehB,0BAOZ,OACA,uBAAMd,UAAU,2BAAhB,UACI,mBAAGU,KAAK,UAAUV,UAAU,gCAAgCe,KAAK,SAASC,eAAa,OAAvF,mBACA,mBAAGN,KAAK,UAAUV,UAAU,kCAAkCe,KAAK,SAASC,eAAa,OAAzF,yBCVGC,E,uKAfb,OACU,qBAAKjB,UAAU,gBAAf,SACI,eAACkB,EAAA,EAAD,CAAQC,OAAO,KAAf,UACI,cAACD,EAAA,EAAOE,MAAR,CAAcV,KAAK,QAAnB,SAA2B,qBAAKT,IAAKoB,EAAMC,OAAO,GAAGnB,IAAI,OAAOH,UAAU,qCAC1E,cAACkB,EAAA,EAAOd,OAAR,CAAemB,gBAAc,qBACzB,eAACL,EAAA,EAAOM,SAAR,CAAiBnB,GAAG,mBAApB,UACJ,cAACoB,EAAA,EAAD,CAAKzB,UAAU,YAEnB,cAAC,EAAD,gB,GAXK0B,a,yBCoBNC,MAhBf,SAAkBvC,GACd,OACI,8BACE,eAACwC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAM/B,IAAK,KAAKb,EAAM6C,YACxC,eAACL,EAAA,EAAKM,KAAN,WACE,cAACN,EAAA,EAAKO,MAAN,UAAa/C,EAAMgD,QACnB,eAACR,EAAA,EAAKS,KAAN,qCACwBjD,EAAMgD,SAE9B,cAACE,EAAA,EAAD,CAAQN,QAAQ,UAAhB,oCCyBCO,E,kDArCX,WAAYnD,GAAO,IAAD,8BACd,cAAMA,IAkBVoD,aAAe,WACX,GAAG,EAAKC,MAAMC,WAGV,OAFa,EAAKD,MAAMC,WAAWC,KAAI,SAACC,GAAD,OACvC,cAAC,EAAD,CAA8BR,MAAOQ,EAASC,KAAMZ,UAAWW,EAASX,WAAzDW,EAASC,UApB5B,EAAKJ,MAAQ,CAACC,WAAW,IAFX,E,wLAKdI,KAAKN,aAAeM,KAAKN,aAAaO,KAAKD,M,kBAEhBE,IAAMC,KAAK,qD,OAA9BC,E,OACJrD,QAAQC,IAAIoD,GACTA,EAAW5C,KAAK6C,SACfL,KAAKM,SAAS,CAACV,WAAYQ,EAAW5C,KAAK+C,SAC3CxD,QAAQC,IAAIgD,KAAKL,MAAMC,aAEvB7C,QAAQC,IAAI,qD,gDAGhBD,QAAQC,IAAR,M,8IAWJ,OACI,qBAAKE,UAAU,oBAAf,SACI,qBAAKA,UAAU,MAAf,SACK8C,KAAKN,uB,GA/BMd,aCSjB4B,E,uKARb,OACC,gCACC,cAAC,EAAD,IACA,cAAC,EAAD,W,GALuB5B,aCQZ6B,E,uKAPP,OACI,qBAAKvD,UAAU,MAAf,SACI,cAAC,EAAD,U,GALE0B,aCQE8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6BCjBOC,EAAsB,sBACtBC,EAAsB,sBACtB7E,EAAqB,qBAErB8E,EAAsB,sBACtBC,EAAsB,sBACtB9E,EAAqB,qBAGrB+E,EAAuB,uBCNpC,IAAMvE,EAAOkB,IAAOsD,QAAQ,iBAAkB,KAC1CC,EAAe,EAEfA,EADDzE,EACgB,CACX0E,UAAU,EACV1E,KAAMA,GAGK,GAKnB,IAAM2E,EAAkBZ,OAAOa,sCAAwCC,IAGxDC,EAFDC,aCfd,WAA0C,IAArBhC,EAAoB,uDAAZ,GAAIiC,EAAQ,uCACrC,OAAQA,EAAO5D,MACX,KAAK+C,EACD,MAAO,CACHc,SAAS,GAGjB,KAAKb,EACD,MAAO,CACHa,SAAS,EACTP,UAAU,EACV1E,KAAMgF,EAAOE,SAGrB,KAAK3F,EACD,MAAO,CACH0F,SAAS,EACTP,UAAU,EACVS,MAAOH,EAAOE,SAGtB,KAAKb,EACD,MAAO,CACHe,aAAa,GAGrB,KAAKd,EACD,MAAO,CACHc,aAAa,EACbV,UAAU,EACV1E,KAAMgF,EAAOE,SAGrB,KAAK1F,EACD,MAAO,CACH4F,aAAa,EACbV,UAAU,EACVS,MAAOH,EAAOE,SAGtB,KAAKX,EACD,MAAO,CACHG,UAAU,EACV1E,KAAM,KACNmF,MAAO,MAGf,QAAS,OAAOpC,KDhCe0B,EAAcE,EAAgBU,YAAgBC,O,iCE2DtEC,OAtEf,SAAyB7F,GACxB,IAAD,EAC8B8F,mBAAS,IADvC,mBACWC,EADX,KACkBC,EADlB,OAEoCF,mBAAS,IAF7C,mBAEWG,EAFX,KAEqBC,EAFrB,KAGU9F,EAAWC,cACX8F,EAAkBC,aAAY,SAAA/C,GAAK,OAAEA,EAAMoC,SAC3CY,EAAeC,IAAMC,YAW3B,OAVcC,cAWV,8BACI,qBAAKvF,GAAG,kBAAR,SACI,qBAAKL,UAAW,6BAAhB,SACI,qBAAKK,GAAG,SAAR,SACI,uBAAMwF,SAdL,SAACC,GAClBA,EAAMC,iBACNvG,EXVR,SAAgBwG,EAAOX,GACnB,OAAO,SAAA7F,GACHA,EAAS,CAACsB,KDTiB,sBCSU8D,QAAS,KAC9C5B,IAAMC,KAAK,0CAA2C,CAClD+C,MAAOA,EACPX,SAAUA,IAEbY,MAAK,SAASC,GACRA,EAAS5F,KAAK6C,SACb3D,EAAS,CAACsB,KDfS,sBCekB8D,QAASsB,IAC9CtF,IAAOuF,IAAI,eAAgBxG,KAAKyG,UAAUF,IAC1CnH,EAAQsH,KAAK,MAGc,IAAxBH,EAAS5F,KAAKuE,MACbrF,EAAS,CAACsB,KAAM7B,EAAoB2F,QAAS,IACjB,IAAxBsB,EAAS5F,KAAKuE,OAClBrF,EAAS,CAACsB,KAAM7B,EAAoB2F,QAAS,OAGxD0B,OAAM,SAASzB,GACZrF,EAAS,CAACsB,KAAM7B,EAAoB2F,QAASC,QWXxC0B,CAAOpB,EAAOE,KAYP,UAE4B,IAApBE,GACA,cAACiB,EAAA,EAAD,CAAOxE,QAAQ,SAAf,mDAIJ,mBAAG3B,GAAG,QAAN,qCACA,sBAAKL,UAAU,cAAf,UACI,uBAAOK,GAAG,QAAQS,KAAK,OAAOd,UAAU,iCAAiCyG,UAAQ,EAC7EC,SAAY,SAACC,GAAD,OAAOvB,EAASuB,EAAEC,OAAOC,QACrCC,YAAY,qBAAqBC,aAAW,qBAAqBC,mBAAiB,iBAEtF,qBAAKhH,UAAU,mBAAf,0CAIJ,sBAAKA,UAAU,iBAAf,UACI,uBAAOK,GAAG,WAAWS,KAAK,WAAWd,UAAU,iCAAiCyG,UAAQ,EAACK,YAAY,YAAYC,aAAW,YACxHL,SAAU,SAACC,GAAD,OAAOrB,EAAYqB,EAAEC,OAAOC,QACtCG,mBAAiB,iBAErB,qBAAKhH,UAAU,mBAAf,4CAIJ,qBAAKA,UAAU,MAAf,SACI,mBAAGK,GAAG,SAASK,KAAK,cAApB,gCAEJ,qBAAKV,UAAU,MAAf,SACI,wBAAQA,UAAU,eAAec,KAAK,SAASJ,KAAK,IAApD,qBAEJ,qBAAKV,UAAU,MAAf,SACI,sBAAKA,UAAU,eAAf,8BACqB,mBAAGU,KAAK,UAAR,qBADrB,SAGJ,cAAC,IAAD,CACIuG,IAAKxB,EACLyB,QAAQ,2CACRR,SAhD5B,SAAkBG,GACdhH,QAAQC,IAAI,iBAAkB+G,kBCLvBM,G,uKARP,OACI,gCACI,cAAC,EAAD,IACZ,cAAC,GAAD,W,GANqBzF,a,OCoIV0F,OAlIf,SAAyBhI,GACxB,IAAD,EAC8B8F,mBAAS,IADvC,mBACWC,EADX,KACkBC,EADlB,OAEoCF,mBAAS,IAF7C,mBAEWG,EAFX,KAEqBC,EAFrB,OAGsCJ,mBAAS,IAH/C,mBAGWmC,EAHX,KAGsBC,EAHtB,OAIsCpC,mBAAS,IAJ/C,mBAIWqC,EAJX,KAIsBC,EAJtB,OAKoCtC,mBAAS,IAL7C,mBAKWuC,EALX,KAKqBC,EALrB,KAMUjC,EAAeC,IAAMC,YACrBJ,EAAkBC,aAAY,SAAA/C,GAAK,OAAEA,EAAMoC,SAC3CrF,EAAWC,cAuCpB,SAASkI,EAAWC,GAEnB,OAAIA,EAAIC,OAAS,GAChBC,MAAM,cACU,IAGoB,IAA5BF,EAAIG,OAAO,aACnBD,MAAM,aACU,IAGiB,IAAzBF,EAAIG,OAAO,WACnBD,MAAM,yCACU,GAgBf,OACI,8BACI,qBAAKzH,GAAG,kBAAR,SACI,qBAAKL,UAAW,6BAAhB,SACI,qBAAKK,GAAG,SAAR,SACI,uBAAMwF,SAzEL,SAACC,GAElB,GADAA,EAAMC,kBAcF,qEAAqEiC,KAbxD7C,KAevB2C,MAAM,8CACC,KAGL,SAAkBF,GACd,GAAIA,EAAIC,OAAS,EAEb,OADTC,MAAM,cACU,EAGZ,IAA0B,IAAtBF,EAAIG,OAAO,MAEV,OADTD,MAAM,WACU,EAEZ,IAAgC,IAA5BF,EAAIG,OAAO,YAEV,OADTD,MAAM,aACU,EAEjB,OAAO,EAjC0BG,CAAS5C,IAAasC,EAAWJ,IAAcI,EAAWF,GAAU,CAC3F,GAAGpC,IAAagC,EAKZ,OADAS,MAAM,+BACE,EAJRtI,EbcD,SAACwG,EAAOX,EAAU6C,EAAWC,GAA7B,8CAA0C,WAAO3I,GAAP,eAAA4I,EAAA,6DACrD5I,EAAS,CAACsB,KDhCqB,sBCgCM8D,QAAS,KADO,kBAG9B5B,IAAMC,KAAK,0CAA0C,CACpE,MAAS+C,EACT,SAAYX,EACZ,UAAa6C,EACb,SAAYC,IAPiC,QAG3CzI,EAH2C,QASzCY,KAAK6C,SACT3D,EAAS,CAACsB,KDxCa,sBCwCc8D,QAASlF,IAC9CkB,IAAOuF,IAAI,eAAgBxG,KAAKyG,UAAU1G,IAC1CX,EAAQsH,KAAK,MAGU,IAApB3G,EAAKY,KAAKuE,MACTrF,EAAS,CAACsB,KAAM5B,EAAoB0F,QAAS,IACrB,IAApBlF,EAAKY,KAAKuE,OACdrF,EAAS,CAACsB,KAAM5B,EAAoB0F,QAAS,IAlBJ,gDAsBjDpF,EAAS,CAACsB,KAAM5B,EAAoB0F,QAAQ,EAAD,KAtBM,yDAA1C,sDadUyD,CAAOlD,EAAOE,EAAUkC,EAAWE,MAqEpC,UAE4B,IAApBlC,GACA,cAACiB,EAAA,EAAD,CAAOxE,QAAQ,SAAf,wEAKJ,mBAAG3B,GAAG,QAAN,qBACA,uBAAOA,GAAG,YAAYS,KAAK,OAAOd,UAAU,iCAAiCyG,UAAQ,EAACC,SAAU,SAACC,GAAD,OAAKa,EAAab,EAAEC,OAAOC,QAAQC,YAAY,kBAAkBC,aAAW,WAAWC,mBAAiB,iBACxM,qBAAKhH,UAAU,mBAAf,wCAGA,uBAAOK,GAAG,WAAWS,KAAK,OAAOd,UAAU,iCAAiCyG,UAAQ,EAACC,SAAU,SAACC,GAAD,OAAKe,EAAYf,EAAEC,OAAOC,QAAQC,YAAY,iBAAiBC,aAAW,WAAWC,mBAAiB,iBACrM,qBAAKhH,UAAU,mBAAf,uCAGA,uBAAOK,GAAG,QAAQS,KAAK,OAAOd,UAAU,iCAAiCyG,UAAQ,EAACC,SAAU,SAACC,GAAD,OAAKvB,EAASuB,EAAEC,OAAOC,QAAQC,YAAY,cAAcC,aAAW,qBAAqBC,mBAAiB,iBACtM,qBAAKhH,UAAU,mBAAf,oCAGA,uBAAOK,GAAG,WAAWS,KAAK,WAAWd,UAAU,iCAAiCyG,UAAQ,EAACC,SAAU,SAACC,GAAD,OAAKrB,EAAYqB,EAAEC,OAAOC,QAAQC,YAAY,iBAAiBC,aAAW,YAAYC,mBAAiB,iBAC1M,qBAAKhH,UAAU,mBAAf,yCAGA,uBAAOK,GAAG,YAAYS,KAAK,WAAWd,UAAU,iCAAiCyG,UAAQ,EAACC,SAAU,SAACC,GAAD,OAAKW,EAAaX,EAAEC,OAAOC,QAAQC,YAAY,mBAAmBC,aAAW,YAAYC,mBAAiB,iBAC9M,qBAAKhH,UAAU,mBAAf,yCAGA,qBAAKA,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAac,KAAK,SAApC,sBAEJ,qBAAKd,UAAU,MAAf,SACI,sBAAKA,UAAU,eAAf,+BAAgD,mBAAGU,KAAK,UAAR,qBAAhD,SAEJ,cAAC,IAAD,CACIuG,IAAKxB,EACLyB,QAAQ,2CACRR,SAhD5B,SAAkBG,GAEdhH,QAAQC,IAAI,iBAAkB+G,kBClEvByB,G,uKARb,OACC,gCACa,cAAC,EAAD,IACZ,cAAC,GAAD,W,GANqB5G,a,OCyDV6G,OAzDf,SAAiCnJ,GAChC,IAAD,EAC8B8F,mBAAS,IADvC,gCAEoCA,mBAAS,KAF7C,mBA+BI,OA/BJ,UAgCQ,8BACI,qBAAK7E,GAAG,0BAAR,SACI,qBAAKL,UAAW,6BAAhB,SACI,qBAAKK,GAAG,iBAAR,SACI,uBAAML,UAAU,qBAAqB0E,OAAO,IAAI8D,OAAO,OAAOC,aAAa,MAA3E,UACI,mBAAGpI,GAAG,QAAN,6BACA,uBAAOA,GAAG,WAAWS,KAAK,WAAWd,UAAU,iCAAiCyG,UAAQ,EAACK,YAAY,iBAAiBC,aAAW,YAAYC,mBAAiB,iBAC9J,qBAAKhH,UAAU,mBAAf,yCAGA,uBAAOK,GAAG,YAAYS,KAAK,WAAWd,UAAU,iCAAiCyG,UAAQ,EAACK,YAAY,oBAAoBC,aAAW,YAAYC,mBAAiB,iBAClK,qBAAKhH,UAAU,mBAAf,yCAGA,qBAAKA,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAac,KAAK,SAASH,QA3CzE,WAEI,IAAI+H,EAAOC,SAASC,eAAe,YAAY/B,MAC3CgC,EAAOF,SAASC,eAAe,aAAa/B,MAIhD,OAQJ,SAAkBe,GAEdA,EAAIC,OAAS,EACjBC,MAAM,cACwB,GAArBF,EAAIG,OAAO,MACbD,MAAM,WACuB,GAA3BF,EAAIG,OAAO,aACbD,MAAM,YAjBTG,CAASS,GAELG,GAAQH,IAIlBZ,MAAM,+BACE,IA+BsB,2CCrCjBgB,G,uKARb,OACC,gCACC,cAAC,EAAD,IACA,cAAC,GAAD,W,GANyBpH,a,OC8CdqH,OA7Cf,SAAiC3J,GAChC,IAAD,EAC8B8F,mBAAS,IADvC,gCAEoCA,mBAAS,KAF7C,mBAGUO,GAHV,UAGyBC,IAAMC,aAa3B,OACI,8BACI,qBAAKtF,GAAG,kBAAR,SACI,qBAAKL,UAAW,6BAAhB,SACI,qBAAKK,GAAG,SAAR,SACI,qBAAKL,UAAU,iBAAf,SACI,uBAAMA,UAAU,aAAa0E,OAAO,IAAI8D,OAAO,OAAOC,aAAa,MAAnE,UACI,mBAAGpI,GAAG,QAAN,4BACA,uBAAOA,GAAG,QAAQS,KAAK,OAAOd,UAAU,iCAAiCyG,UAAQ,EAACK,YAAY,sBAAsBC,aAAW,gBAAgBC,mBAAiB,iBAChK,qBAAKhH,UAAU,mBAAf,uCAGA,qBAAKA,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAac,KAAK,SAASH,QAAQ,iBAArD,8BAEJ,cAAC,IAAD,CACIsG,IAAKxB,EACLyB,QAAQ,2CACRR,SAvBhC,SAAkBG,GAEdhH,QAAQC,IAAI,iBAAkB+G,oBCJvBmC,G,uKARb,OACC,gCACC,cAAC,EAAD,IACA,cAAC,GAAD,W,GAN6BtH,aCLlB,I,MAAA,IAA0B,uCCqE1BuH,OA/Df,SAAwB7J,GAiBpB,OACI,8BACI,qBAAKiB,GAAG,iBAAR,SACI,qBAAKL,UAAW,6BAAhB,SACI,qBAAKK,GAAG,QAAR,SACI,qBAAKL,UAAU,iBAAf,SACI,uBAAMA,UAAU,YAAY0E,OAAO,IAAI8D,OAAO,OAA6BC,aAAa,MAAxF,UACI,mBAAGpI,GAAG,QAAN,mBACA,mBAAGA,GAAG,WAAN,gCACA,mBAAGA,GAAG,WAAN,wBACA,mBAAGA,GAAG,WAAN,oBACA,mBAAGA,GAAG,WAAWK,KAAK,6BAAtB,iCACA,mBAAGL,GAAG,WAAN,qBACA,mBAAGA,GAAG,WAAWK,KAAK,6BAAtB,kCACA,qBAAKV,UAAY,MAAjB,SACI,mBAAGU,KAAQwI,GAAKtC,OAAS,SAAzB,sCAEJ,qBAAK5G,UAAU,MAAf,SACI,wBAAQA,UAAU,+BAA+BW,QAAS,SAACgG,GAEvDA,EAAEZ,iBACFtC,OAAOC,SAAShD,KAAK,yBAHzB,wBAMJ,qBAAKV,UAAU,MAAf,SACI,wBAAQA,UAAU,8BAA8BW,QAAS,SAACgG,GAEtDA,EAAEZ,iBACFtC,OAAOC,SAAShD,KAAK,gCAHzB,uBAMJ,qBAAKV,UAAU,MAAf,SACI,wBAAQA,UAAU,+BAA+BW,QAAS,SAACgG,GAEvDA,EAAEZ,iBACFtC,OAAOC,SAAShD,KAAK,yBAHzB,sCCrCrByI,G,uKATP,OACL,gCACC,cAAC,EAAD,IACA,cAAC,GAAD,W,GANoBzH,a,MCkBT0H,OAnBf,SAA+BhK,GAE3B,OACI,8BACI,qBAAKiB,GAAG,wBAAR,SACI,qBAAKA,GAAG,mBAAR,SACI,qBAAKL,UAAU,8BAAf,SACI,uBAAMA,UAAU,0BAA0B0E,OAAO,IAAI8D,OAAO,OAAOC,aAAa,MAAhF,UACI,mBAAGpI,GAAG,QAAN,4CACA,sBAAKL,UAAU,YAAf,uBACc,mBAAGU,KAAK,IAAR,sCCE3B2I,G,uKATb,OACC,gCACC,cAAC,EAAD,IACA,cAAC,GAAD,W,GAL2B3H,aCS/B4H,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUhF,MAAOA,EAAjB,SACI,cAAC,IAAD,CAAQzF,QAASA,EAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0K,OAAK,EAACC,KAAK,IAAIC,UAAWpG,IACjC,cAAC,IAAD,CAAOmG,KAAK,UAAUC,UAAWC,KACjC,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWE,KACjC,cAAC,IAAD,CAAOH,KAAK,cAAcC,UAAWb,KACrC,cAAC,IAAD,CAAOY,KAAK,cAAcC,UAAWX,KACrC,cAAC,IAAD,CAAOU,KAAK,SAASC,UAAWR,KAChC,cAAC,IAAD,CAAOO,KAAK,gBAAgBC,UAAWN,KACvC,cAAC,IAAD,CAAUS,KAAK,IAAIC,GAAG,eAKtCpB,SAASC,eAAe,SjBmGtB,kBAAmBoB,WACrBA,UAAUC,cAAcC,MACrBjE,MAAK,SAAAkE,GACJA,EAAaC,gBAEd9D,OAAM,SAAAzB,GACLhF,QAAQgF,MAAMA,EAAMwF,a","file":"static/js/main.97a99548.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.23f3f658.png\";","  \r\nimport { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export default __webpack_public_path__ + \"static/media/avatar.5fedd648.png\";","export const USER_SIGNIN_ATTEMPT = 'USER_SIGNIN_ATTEMPT';\r\nexport const USER_SIGNIN_SUCCESS = 'USER_SIGNIN_SUCCESS';\r\nexport const USER_SIGNIN_FAILED = 'USER_SIGNIN_FAILED';\r\n\r\nexport const USER_SIGNUP_ATTEMPT = 'USER_SIGNUP_ATTEMPT';\r\nexport const USER_SIGNUP_SUCCESS = 'USER_SIGNUP_SUCCESS';\r\nexport const USER_SIGNUP_FAILED = 'USER_SIGNUP_FAILED';\r\n\r\n\r\nexport const USER_SIGNOUT_SUCCESS = 'USER_SIGNOUT_SUCCESS';\r\n","import Axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport { USER_SIGNIN_ATTEMPT, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAILED,\r\n        USER_SIGNUP_ATTEMPT, USER_SIGNUP_SUCCESS, USER_SIGNUP_FAILED,\r\n        USER_SIGNOUT_SUCCESS} from '../Constants/userConst';\r\nimport { Redirect, Route } from \"react-router\";\r\nimport { history } from '../history';\r\nfunction signin(email, password) {\r\n    return dispatch => {\r\n        dispatch({type: USER_SIGNIN_ATTEMPT, payload: {}});\r\n        Axios.post(\"https://techstar12.herokuapp.com/signin\", {\r\n            email: email,\r\n            password: password\r\n        })\r\n        .then(function(response) { \r\n            if(response.data.success){\r\n                dispatch({type: USER_SIGNIN_SUCCESS, payload: response});\r\n                Cookie.set('userInstance', JSON.stringify(response));\r\n                history.push('/');\r\n            }\r\n            else {\r\n                if(response.data.error === 0)\r\n                    dispatch({type: USER_SIGNIN_FAILED, payload: 0});\r\n                else if(response.data.error === 1)\r\n                    dispatch({type: USER_SIGNIN_FAILED, payload: 1});\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            dispatch({type: USER_SIGNIN_FAILED, payload: error});\r\n        });\r\n    };\r\n\r\n}\r\n\r\n\r\nconst signup = (email, password, firstname, lastname) => async (dispatch) => {\r\n    dispatch({type: USER_SIGNUP_ATTEMPT, payload: {}});\r\n    try{\r\n        const user = await Axios.post(\"https://techstar12.herokuapp.com/signup\",{\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"firstname\": firstname,\r\n            \"lastname\": lastname\r\n        });\r\n        if(user.data.success){\r\n            dispatch({type: USER_SIGNUP_SUCCESS, payload: user});\r\n            Cookie.set('userInstance', JSON.stringify(user));\r\n            history.push('/');\r\n        }\r\n        else {\r\n            if(user.data.error === 0)\r\n                dispatch({type: USER_SIGNUP_FAILED, payload: 0});\r\n            else if(user.data.error === 1)\r\n                dispatch({type: USER_SIGNUP_FAILED, payload: 1});\r\n        }\r\n    }\r\n    catch (err) {\r\n        dispatch({type: USER_SIGNUP_FAILED, payload: err});\r\n    }\r\n}\r\n/*const getavatar = (email) => async (dispatch) => {\r\n    try{\r\n        const img = await Axios.post('http://localhost:3001/load-avatar', email);\r\n        return img; \r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n}\r\n*/\r\n\r\nconst signout = () => (dispatch) => {\r\n    Cookie.remove('userInstance');\r\n    dispatch({type: USER_SIGNOUT_SUCCESS});\r\n}\r\n\r\n\r\nexport {signin, signup, signout};","import React, {useEffect, useState} from 'react';\r\nimport history from '../history';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport '../css/Profile.css'\r\nimport avatar from  '../images/avatar.png';\r\nimport cookie from 'js-cookie';\r\nimport { signout } from '../Actions/authActions';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nfunction ProfileNavComp(props) \r\n{\r\n    const userInstance = cookie.get('userInstance');\r\n    const dispatch = useDispatch();\r\n    if(userInstance) {\r\n        const user = JSON.parse(userInstance);\r\n        console.log(user);\r\n        return (   \r\n            <Dropdown className=\"user-instance\">\r\n                <img className=\"avatar\" src={avatar} alt=\"profile picture\"></img>\r\n                <Dropdown.Toggle id=\"dropdown-basic\">\r\n                    Hello {user.data.user.first_name}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#/action-1\">My Profile</Dropdown.Item>\r\n                    <Dropdown.Item href=\"/\" onClick={()=>{dispatch(signout());}}>Logout</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n            <a href=\"/Signin\" className=\"btn btn-primary btn-lg active\" role=\"button\" aria-pressed=\"true\">Login</a>\r\n            <a href=\"/Signup\" className=\"btn btn-secondary btn-lg active\" role=\"button\" aria-pressed=\"true\">Sign Up</a>\r\n        </form>\r\n    );}\r\n}\r\nexport default ProfileNavComp;","import React, {Component} from 'react';\r\nimport {Navbar, NavItem, NavDropdown, MenuItem, Nav, Form, FormControl, Button} from 'react-bootstrap';\r\nimport '../css/navbar.css';\r\nimport logo from '../images/logo.png';\r\nimport ProfileNavComp from './ProfileNavComp'\r\n\r\nclass NavBar extends Component \r\n{\r\n\trender() {\r\n\t\treturn (\r\n            <div className=\"navbar-parent\">\r\n                <Navbar expand='lg'>\r\n                    <Navbar.Brand href=\"#home\"><img src={logo} height=\"\" alt=\"logo\" className=\"d-inline-block align-top logoc\"/></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n \t\t\t                <Nav className='mr-auto'>\r\n                            </Nav>\r\n \t\t\t            <ProfileNavComp />\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default NavBar;","\r\nimport React, { useEffect, useState} from 'react';\r\nimport history from '../history';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navbar, NavItem, NavDropdown, MenuItem, Nav, Form, FormControl, Button } from 'react-bootstrap';\r\nimport '../css/Category.css'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\n\r\n\r\nfunction Category(props) {\r\n    return (  \r\n        <div>\r\n          <Card style={{ width: '18rem' }}>\r\n            <Card.Img variant=\"top\" src={`./`+props.imagePath}/>\r\n            <Card.Body>\r\n              <Card.Title>{props.title}</Card.Title>\r\n              <Card.Text>\r\n              Click here to see more {props.title}\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Find out more</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n    );\r\n  }\r\nexport default Category;\r\n","import React, {Component, useState} from 'react';\r\nimport history from '../history';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport '../css/HomePage.css'\r\nimport Category from '../Components/Category';\r\nimport Axios from 'axios';\r\n\r\nclass HomePageComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {categories:[]};\r\n    }\r\n    async componentWillMount() {\r\n        this.categoryList = this.categoryList.bind(this);\r\n        try {\r\n            var catsToList = await Axios.post(\"https://techstar12.herokuapp.com/fetch_categories\"); \r\n            console.log(catsToList);\r\n            if(catsToList.data.success){\r\n                this.setState({categories: catsToList.data.result});\r\n                console.log(this.state.categories);\r\n            } else {\r\n                console.log(\"Error: could not fetch category list from server.\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    categoryList = () => {\r\n        if(this.state.categories) {    \r\n            const list = this.state.categories.map((category) =>\r\n            <Category key={category.Name} title={category.Name} imagePath={category.imagePath}/>)\r\n            return (list);\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"HomePagecontainer\">\r\n                <div className=\"row\">\r\n                    {this.categoryList()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default HomePageComponent;","import React, {Component} from 'react';\r\nimport '../css/HomePage.css'\r\nimport {Link} from 'react-router-dom';\r\nimport NavBar from '../Components/Navbar';\r\nimport HomePageComp from '../Components/HomePageComponent';\r\n\r\nclass HomePageView extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<HomePageComp />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default HomePageView;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Hp from './Views/HomePageView';\r\n\r\nclass App extends Component \r\n{\r\n    render () {\r\n        return (    \r\n            <div className=\"App\">\r\n                <Hp />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nexport const USER_SIGNIN_ATTEMPT = 'USER_SIGNIN_ATTEMPT';\r\nexport const USER_SIGNIN_SUCCESS = 'USER_SIGNIN_SUCCESS';\r\nexport const USER_SIGNIN_FAILED = 'USER_SIGNIN_FAILED';\r\n\r\nexport const USER_SIGNUP_ATTEMPT = 'USER_SIGNUP_ATTEMPT';\r\nexport const USER_SIGNUP_SUCCESS = 'USER_SIGNUP_SUCCESS';\r\nexport const USER_SIGNUP_FAILED = 'USER_SIGNUP_FAILED';\r\n\r\n\r\nexport const USER_SIGNOUT_SUCCESS = 'USER_SIGNOUT_SUCCESS';\r\n\r\nexport const USER_CAR_EDITING_FAILED = 'USER_CAR_EDITING_FAILED';\r\nexport const USER_CAR_EDITING_SUCCESS = 'USER_CAR_EDITING_SUCCESS';\r\nexport const USER_CAR_EDITING = 'USER_CAR_EDITING';","import {combineReducers, createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {authReducer} from './Reducers/authReducer';\r\nimport Cookie from 'js-cookie';\r\nconst user = Cookie.getJSON('userInstance')|| null;\r\nvar initialState = 0;\r\nif(user){\r\n    initialState = {\r\n        loggedin: true,\r\n        user: user\r\n    }\r\n} else {\r\n    initialState = {}\r\n}\r\n/*const Red = combineReducers({\r\n    user : authReducer\r\n});*/\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(authReducer, initialState, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;","import { USER_SIGNIN_ATTEMPT, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAILED,\r\n    USER_SIGNUP_ATTEMPT, USER_SIGNUP_SUCCESS, USER_SIGNUP_FAILED, USER_SIGNOUT_SUCCESS} from '../userConst';\r\n\r\nfunction authReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case USER_SIGNIN_ATTEMPT:{\r\n            return {\r\n                logging: true\r\n            }\r\n        }\r\n        case USER_SIGNIN_SUCCESS:{\r\n            return {\r\n                logging: false,\r\n                loggedin: true,\r\n                user: action.payload\r\n            }\r\n        }\r\n        case USER_SIGNIN_FAILED:{\r\n            return {\r\n                logging: false,\r\n                loggedin: false,\r\n                error: action.payload\r\n            }\r\n        }\r\n        case USER_SIGNUP_ATTEMPT:{\r\n            return {\r\n                registering: true\r\n            }\r\n        }\r\n        case USER_SIGNUP_SUCCESS:{\r\n            return {\r\n                registering: false,\r\n                loggedin: true,\r\n                user: action.payload\r\n            }\r\n        }\r\n        case USER_SIGNUP_FAILED:{\r\n            return {\r\n                registering: false,\r\n                loggedin: false,\r\n                error: action.payload\r\n            }\r\n        }\r\n        case USER_SIGNOUT_SUCCESS:{\r\n            return {\r\n                loggedin: false,\r\n                user: null,\r\n                error: null\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\nexport {authReducer};","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {signin} from '../Actions/authActions';\r\nimport '../css/SignIn.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from 'react-bootstrap/Alert'\r\nfunction SignInComponent(props) \r\n{\r\n    const [Email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n    const errorFromServer = useSelector(state=>state.error);\r\n    const recaptchaRef = React.createRef();\r\n    let history = useHistory();\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        dispatch(signin(Email, password));\r\n    }\r\n\r\n    function onChange(value) {\r\n        console.log(\"Captcha value:\", value);\r\n    }\r\n    \r\n    return (   \r\n        <div>\r\n            <div id=\"SignIncontainer\">\r\n                <div className= \"row justify-content-center\">\r\n                    <div id=\"SignIn\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            {\r\n                                errorFromServer === 0 &&\r\n                                <Alert variant=\"danger\">\r\n                                    Email and\\or password are incorrect!\r\n                                </Alert>\r\n                            } \r\n                            <p id=\"title\">Sign In To Your Account</p>\r\n                            <div className=\"email-field\">\r\n                                <input id=\"email\" type=\"text\" className=\"form-control fix-rounded-right\" required \r\n                                    onChange = {(e) => setEmail(e.target.value)}\r\n                                    placeholder=\"user name or email\" aria-label=\"user name or email\" aria-describedby=\"basic-addon1\">\r\n                                </input>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please choose a username. \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"password-field\">\r\n                                <input id=\"password\" type=\"password\" className=\"form-control fix-rounded-right\" required placeholder=\"password:\" aria-label=\"password:\"\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    aria-describedby=\"basic-addon2\">\r\n                                </input>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please enter your password.\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <a id=\"forgot\" href=\"/Forgotpass\">Forgot password?</a>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <button className=\"SignInButton\" type=\"submit\" href=\"/\">Login</button>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"need-acc-txt\"> \r\n                                    Need an account? <a href=\"/Signup\">Sign-Up</a> </div>\r\n                                </div>\r\n                            <ReCAPTCHA\r\n                                ref={recaptchaRef}\r\n                                sitekey=\"6Ldn5DEaAAAAALYRhCaGFStvoKGWXRUxuBJVNPrn\"\r\n                                onChange={onChange}\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default SignInComponent;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport NavBar from '../Components/Navbar';\r\nimport SignIn from '../Components/SignInComponent';\r\n\r\nclass SignInView extends Component\r\n{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n\t\t\t\t<SignIn />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default SignInView;","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport '../css/signup.css'\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport {signup} from '../Actions/authActions';\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction SignUpComponent(props) \r\n{\r\n    const [Email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [password1, setPassword1] = useState('');\r\n    const [Firstname, setFirstName] = useState('');\r\n    const [Lastname, setLastName] = useState('');\r\n    const recaptchaRef = React.createRef();\r\n    const errorFromServer = useSelector(state=>state.error);\r\n    const dispatch = useDispatch();\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(ValidateEmail(Email) && checkPwd(password) && checkNames(Firstname) && checkNames(Lastname)){\r\n            if(password === password1){\r\n                dispatch(signup(Email, password, Firstname, Lastname));\r\n            }\r\n            else {\r\n                alert(\"The passwords do not match\");\r\n                return (false);\r\n            }\r\n        }\r\n    }\r\n\r\n    function ValidateEmail(mail) \r\n    {\r\n        if (/^[a-zA-Z0-9.!#$%&'+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)$/.test(mail))\r\n            return true;\r\n\t\talert(\"You have entered an invalid email address!\");\r\n\t\treturn false;\r\n\t}\r\n\r\n    function checkPwd(str) {\r\n        if (str.length < 6){\r\n\t\t\talert(\"Too short\");\r\n            return false;\r\n        }\r\n\r\n\t\telse if (str.search(/\\d/) === -1){\r\n\t\t\talert(\"No num\");\r\n            return false;\r\n        }\r\n\t\telse if (str.search(/[a-zA-Z]/) === -1){\r\n\t\t\talert(\"no chars\");\r\n            return false;\r\n        }\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction checkNames(str) \r\n\t{\r\n\t\tif (str.length < 1){\r\n\t\t\talert(\"Too short\");\r\n            return false;\r\n        }\r\n\r\n\t\telse if (str.search(/[a-zA-Z]/) === -1){\r\n\t\t\talert(\"no chars\");\r\n            return false;\r\n        }\r\n\r\n\t\telse if (str.search(/[0-9]/) !== -1) {\r\n\t\t\talert(\"you cannot write number at your name\");\r\n            return false;\r\n        }\r\n\t\treturn true;\r\n\t}\r\n\r\n    function onSubmit() \r\n    {\r\n        const recaptchaValue = recaptchaRef.current.getValue();\r\n        this.props.onSubmit(recaptchaValue);\r\n    }\r\n    \r\n    function onChange(value) \r\n    {\r\n        console.log(\"Captcha value:\", value);\r\n    }\r\n  \r\n    return (   \r\n        <div>\r\n            <div id=\"SignUpcontainer\">\r\n                <div className= \"row justify-content-center\">\r\n                    <div id=\"SignUp\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            {\r\n                                errorFromServer === 0 &&\r\n                                <Alert variant=\"danger\">\r\n                                    Email is already used. Please write \r\n                                    another email address.\r\n                                </Alert>\r\n                            } \r\n                            <p id=\"title\">Sign Up</p>\r\n                            <input id=\"Firstname\" type=\"text\" className=\"form-control fix-rounded-right\" required onChange={(e)=>setFirstName(e.target.value)} placeholder=\"Enter Firstname\" aria-label=\"Fullname\" aria-describedby=\"basic-addon1\"></input>\r\n                            <div className=\"invalid-feedback\">\r\n                                Please choose a Firstname.\r\n                            </div>\r\n                            <input id=\"Lastname\" type=\"text\" className=\"form-control fix-rounded-right\" required onChange={(e)=>setLastName(e.target.value)} placeholder=\"Enter Lastname\" aria-label=\"Lastname\" aria-describedby=\"basic-addon1\"></input>\r\n                            <div className=\"invalid-feedback\">\r\n                                Please choose a username.\r\n                            </div>\r\n                            <input id=\"email\" type=\"text\" className=\"form-control fix-rounded-right\" required onChange={(e)=>setEmail(e.target.value)} placeholder=\"Enter Email\" aria-label=\"user name or email\" aria-describedby=\"basic-addon1\"></input>\r\n                            <div className=\"invalid-feedback\">\r\n                                Please choose a email.\r\n                            </div>\r\n                            <input id=\"password\" type=\"password\" className=\"form-control fix-rounded-right\" required onChange={(e)=>setPassword(e.target.value)} placeholder=\"Enter Password\" aria-label=\"password:\" aria-describedby=\"basic-addon2\"></input>\r\n                            <div className=\"invalid-feedback\">\r\n                                Please enter your password.\r\n                            </div>\r\n                            <input id=\"password1\" type=\"password\" className=\"form-control fix-rounded-right\" required onChange={(e)=>setPassword1(e.target.value)} placeholder=\"ReEnter Password\" aria-label=\"password:\" aria-describedby=\"basic-addon2\"></input>\r\n                            <div className=\"invalid-feedback\">\r\n                                Please enter your password.\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <button className=\"Signup-btn\" type=\"submit\">Signup</button>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"need-acc-txt\"> Have an account? <a href=\"/signin\">Sign-In</a> </div>\r\n                            </div>\r\n                            <ReCAPTCHA\r\n                                ref={recaptchaRef}\r\n                                sitekey=\"6Ldn5DEaAAAAALYRhCaGFStvoKGWXRUxuBJVNPrn\"\r\n                                onChange={onChange}\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    );\r\n}\r\nexport default SignUpComponent;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport NavBar from '../Components/Navbar';\r\nimport SignUp from '../Components/SignupComponent';\r\n\r\nclass SignUpView extends Component \r\n{\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <NavBar />\r\n\t\t\t\t<SignUp />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default SignUpView;","import React, {useEffect, useState} from 'react';\r\nimport history from '../history';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport '../css/Update.css'\r\n\r\nfunction UpdatePasswordComponent(props) \r\n{\r\n    const [Email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\t\r\n    function onClickUpdate() \r\n    {\r\n        let pass = document.getElementById(\"password\").value;\r\n        let conf = document.getElementById(\"password1\").value;\r\n        \r\n        checkPwd(pass);\r\n\t\t\r\n        if (conf == pass) \r\n        {\r\n            return (true)\r\n        }\r\n\t\talert(\"The passwords do not match\");\r\n\t\treturn (false)\r\n    }\r\n\t\r\n    function checkPwd(str) \r\n    {\r\n\t   if (str.length < 6)\r\n\t\t  alert(\"Too short\");\r\n\t   else if (str.search(/\\d/) == -1) \r\n           alert(\"No num\");\r\n\t   else if (str.search(/[a-zA-Z]/) == -1) \r\n           alert(\"no chars\");\r\n\r\n\treturn (\"ok\");\r\n\t}\r\n\t\r\n    return (   \r\n        <div>\r\n            <div id=\"UpdatePasswordcontainer\">\r\n                <div className= \"row justify-content-center\">\r\n                    <div id=\"UpdatePassword\">\r\n                        <form className=\"UpdatePasswordForm\" action=\"#\" method=\"post\" autocomplete=\"off\">\r\n                            <p id=\"title\">Update Password</p>\r\n                            <input id=\"password\" type=\"password\" className=\"form-control fix-rounded-right\" required placeholder=\"Enter Password\" aria-label=\"password:\" aria-describedby=\"basic-addon2\"></input>\r\n                            <div className=\"invalid-feedback\">\r\n                                Please enter your password.\r\n                            </div>\r\n                            <input id=\"password1\" type=\"password\" className=\"form-control fix-rounded-right\" required placeholder=\"Re-enter Password\" aria-label=\"password:\" aria-describedby=\"basic-addon2\"></input>\r\n                            <div className=\"invalid-feedback\">\r\n                                Please enter your password.\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <button className=\"Signup-btn\" type=\"submit\" onClick={onClickUpdate}>Update Password</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    );\r\n}\r\nexport default UpdatePasswordComponent;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport NavBar from '../Components/Navbar';\r\nimport UpdatePasswordComponent from '../Components/updatePssworscomponent';\r\n\r\nclass UpdatePassView extends Component \r\n{\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<UpdatePasswordComponent />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default UpdatePassView;","import React, { useEffect, useState} from 'react';\r\nimport history from '../history';\r\nimport { seDispatch, useSelector} from 'react-redux';\r\nimport '../css/Forgot.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nfunction ForgotPasswordComponent(props) \r\n{\r\n    const [Email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const recaptchaRef = React.createRef();\r\n    \r\n    function onSubmit() \r\n    {\r\n        const recaptchaValue = recaptchaRef.current.getValue();\r\n        this.props.onSubmit(recaptchaValue);\r\n    }\r\n    \r\n    function onChange(value) \r\n    {\r\n        console.log(\"Captcha value:\", value);\r\n    }\r\n\r\n    return (   \r\n        <div>\r\n            <div id=\"ForgotContainer\">\r\n                <div className= \"row justify-content-center\">\r\n                    <div id=\"Forgot\">\r\n                        <div className=\"col login-left\">\r\n                            <form className=\"ForgotForm\" action=\"#\" method=\"post\" autocomplete=\"off\">\r\n                                <p id=\"title\">Reset Password</p>\r\n                                <input id=\"email\" type=\"text\" className=\"form-control fix-rounded-right\" required placeholder=\"Enter Email Address\" aria-label=\"email Address\" aria-describedby=\"basic-addon1\"></input>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please choose a username.\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <button className=\"Signup-btn\" type=\"submit\" onClick=\"onClickReset()\">Reset Password</button>\r\n                                </div>\r\n                                <ReCAPTCHA\r\n                                    ref={recaptchaRef}\r\n                                    sitekey=\"6Ldn5DEaAAAAALYRhCaGFStvoKGWXRUxuBJVNPrn\"\r\n                                    onChange={onChange}\r\n                                />\r\n                            </form> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    );\r\n}\r\nexport default ForgotPasswordComponent;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport NavBar from '../Components/Navbar';\r\nimport ForgotPasswordComponent from '../Components/ForgotPasswordComponent';\r\n\r\nclass ForgotPasswordView extends Component \r\n{\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<ForgotPasswordComponent />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ForgotPasswordView;","export default __webpack_public_path__ + \"static/media/FinalTask.17e43989.pdf\";","import React, {useEffect, useState} from 'react';\r\nimport history from '../history';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport '../css/About.css'\r\nimport Pdf from '../images/FinalTask.pdf';\r\n\r\nfunction AboutComponent(props) \r\n{\r\n\tfunction onClickTelegram()\r\n\t{\r\n\t\twindow.location='https://telegram.org/'; \r\n\t}\r\n    \r\n\tfunction onClickTwitter()\r\n\t{\r\n\t\twindow.location='https://twitter.com/?lang=en';\r\n\t}\r\n    \r\n\tfunction onClickFacebook()\r\n\t{\r\n\t\twindow.location='https://www.facebook.com/';\t\r\n\t}\r\n    \r\n    return (   \r\n        <div>\r\n            <div id=\"AboutContainer\">\r\n                <div className= \"row justify-content-center\">\r\n                    <div id=\"About\">\r\n                        <div className=\"col login-left\">\r\n                            <form className=\"AboutForm\" action=\"#\" method=\"post\"                       autocomplete=\"off\">\r\n                                <p id=\"title\">About</p>\r\n                                <p id=\"subTitle\">Our Office Address</p>\r\n                                <p id=\"myAnswer\">Ort Braude</p>\r\n                                <p id=\"subTitle\">E-mail</p>\r\n                                <a id=\"myAnswer\" href=\"mailto:nimnimaor@gmail.com\">nimnimaor@gmail.com</a>\r\n                                <p id=\"subTitle\">Website</p>\r\n                                <a id=\"myAnswer\" href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a> \r\n                                <div className = \"App\">\r\n                                    <a href = {Pdf} target = \"_blank\">Privacy Policy & Terms</a>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <button className=\"login-btn facebook-login-btn\" onClick={(e) => \r\n                                    {\r\n                                        e.preventDefault();\r\n                                        window.location.href='https://facebook.com/';\r\n                                    }}>Facebook</button>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <button className=\"login-btn Twitter-login-btn\" onClick={(e) => \r\n                                    {\r\n                                        e.preventDefault();\r\n                                        window.location.href='https://twitter.com/?lang=en';\r\n                                    }}>Twitter</button>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <button className=\"login-btn Telegram-login-btn\" onClick={(e) => \r\n                                    {\r\n                                        e.preventDefault();\r\n                                        window.location.href='https://telegram.org/';\r\n                                    }}>Telegram</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    );\r\n}\r\nexport default AboutComponent;","import React, {Component} from 'react';\r\nimport '../css/About.css'\r\nimport {Link} from 'react-router-dom';\r\nimport NavBar from '../Components/Navbar';\r\nimport AboutComponent from '../Components/AboutComponent';\r\n\r\nclass AboutView extends Component \r\n{\r\n    render() {\r\n        return (\r\n\t\t\t<div>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<AboutComponent />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AboutView;","import React, { useEffect, useState} from 'react';\r\nimport history from '../history';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport '../css/Constraction.css'\r\n\r\nfunction ConstractionComponent(props) \r\n{\r\n    return (   \r\n        <div>\r\n            <div id=\"ConstractionContainer\">\r\n                <div id=\"Constractionform\">\r\n                    <div className=\"col login-left-Constraction\">\r\n                        <form className=\"login-form-Constraction\" action=\"#\" method=\"post\" autocomplete=\"off\">\r\n                            <p id=\"title\">This page under constraction. </p>\r\n                            <div className=\"constract\"> \r\n                                Return to <a href=\"/\">Dashboard</a> \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    );\r\n}\r\nexport default ConstractionComponent; ","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavBar from '../Components/Navbar';\r\nimport ConstractionComponent from '../Components/ConstractionComponent';\r\nimport '../css/Constraction.css'\r\n\r\nclass ConstractionView extends Component {\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<ConstractionComponent />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ConstractionView;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport SignIn from './Views/SignInView';\r\nimport SignUp from './Views/SignUpView';\r\nimport UpdatePassView from './Views/UpdatePassView';\r\nimport ForgotPasswordView from './Views/ForgotPasswordView';\r\nimport AboutView from './Views/AboutView';\r\nimport ConstractionView from './Views/ConstractionView';\r\nimport {history} from './history';\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>  \r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={App} />\r\n                    <Route path=\"/SignIn\" component={SignIn} />\r\n                    <Route path=\"/Signup\" component={SignUp} />                    \r\n                    <Route path=\"/Updatepass\" component={UpdatePassView} />\r\n                    <Route path=\"/Forgotpass\" component={ForgotPasswordView} />                    \r\n                    <Route path=\"/About\" component={AboutView} />\r\n                    <Route path=\"/Constraction\" component={ConstractionView} />\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                </Switch>\r\n            </Router>    \r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}